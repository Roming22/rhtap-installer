apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
        - name: configure-gitops
          image: "k8s.gcr.io/hyperkube:v1.12.1"
          command:      
          - /bin/sh
          - -c
          - >        
                until kubectl get argocds.argoproj.io openshift-gitops -n openshift-gitops; do echo "waiting"; sleep 3; done

                kubectl delete namespace developer-gitops;
                kubectl create namespace developer-gitops;

                # TODO: move the yaml inside the helm chart or make it inline;
                
                kubectl create -n developer-argocd -f https://gist.githubusercontent.com/sbose78/7271435fb2ba3678950c9ff4444401d0/raw/e626072ecf286916df6013ce86b849b062b401d7/developer-argocd.yaml;
                

        - name: configure-tekton
          image: "k8s.gcr.io/hyperkube:v1.12.1"
          command:      
          - /bin/sh
          - -c
          - >        
                until kubectl get tektonconfigs.operator.tekton.dev config; do echo "waiting"; sleep 3; done

                kubectl patch tektonconfig config --type 'merge' --patch '{"spec" :{"pipeline":{"enable-custom-tasks":true}}}';


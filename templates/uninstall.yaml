---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{index .Values "trusted-application-pipeline" "name"}}-{{.Release.Name}}-uninstall"
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote}}
    app.kubernetes.io/instance: {{.Release.Name | quote}}
    app.kubernetes.io/version: {{.Chart.AppVersion}}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": pre-delete
spec:
  template:
    metadata:
      name: "{{.Release.Name}}-uninstall"
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote}}
        app.kubernetes.io/instance: {{.Release.Name | quote}}
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      containers:
        - name: delete-namespace
          image: "registry.redhat.io/openshift4/ose-tools-rhel8:latest"
          workingDir: /tmp
          command:
            - /bin/bash
            - -c
            - |
              set -o errexit
              set -o nounset
              set -o pipefail
            {{ if eq .Values.debug.script true }}
              set -x
            {{ end }}
            
              NAMESPACE="{{.Release.Namespace}}"
              echo -n "* Removing applications: "
              if kubectl api-resources | grep -q applications; then
                kubectl get applications -n "$NAMESPACE" --ignore-not-found --output name | xargs --no-run-if-empty kubectl delete -n "$NAMESPACE" --wait
                echo -n "."
                while [ "$(kubectl get applications -n "$NAMESPACE" --ignore-not-found --output name | wc -l)" != "0" ]; do
                  echo "_"
                  sleep 2
                done
              fi
              echo "OK"

              echo -n "* Removing namespace: "
              kubectl delete namespace "$NAMESPACE" --ignore-not-found --wait
              echo "OK"
              
              echo
              echo "Uninstall successful"
      restartPolicy: Never
      serviceAccountName: helm-manager
